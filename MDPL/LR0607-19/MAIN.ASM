PUBLIC	X
PUBLIC	PUTLB

EXTRN	READX:	NEAR
EXTRN	U2NS:	NEAR
EXTRN	S2NS:	NEAR
EXTRN	U10NS:	NEAR
EXTRN	S10NS:	NEAR
EXTRN	U16NS:	NEAR
EXTRN	S16NS:	NEAR

SSEG	SEGMENT	PARA	STACK	'STACK'
		DB		100	DUP (0)
SSEG	ENDS

DSEG	SEGMENT	PARA	PUBLIC	'DATA'

	F	DW	READX, U2NS, S2NS, U10NS, S10NS, U16NS, S16NS
	X	DW	0
		
	MENUS	DB	'**************MENU**************',	13, 10
		DB						13, 10
		DB	'0. SHOW MENU', 			13, 10
		DB	'1. INPUT NUMBER', 			13, 10
		DB	'2. PRINT NUMBER IN UNSIGNED 2NS', 	13, 10
		DB	'3. PRINT NUMBER IN SIGNED 2NS', 	13, 10
		DB	'4. PRINT NUMBER IN UNSIGNED 10NS', 	13, 10
		DB	'5. PRINT NUMBER IN SIGNED 10NS', 	13, 10
		DB	'6. PRINT NUMBER IN UNSIGNED 16NS', 	13, 10
		DB	'7. PRINT NUMBER IN SIGNED 16NS', 	13, 10
		DB	'8. EXIT', 				13, 10, '$'

	MARKER	DB	'> $'
	CRLF	DB						13, 10, '$'

DSEG	ENDS

CSEG	SEGMENT	PARA	PUBLIC	'CODE'
		ASSUME	CS:CSEG, DS:DSEG, SS:SSEG

MENUP	PROC	NEAR
		MOV	DX, OFFSET MENUS
		MOV	AH, 09H
		INT	21H

		RET
MENUP	ENDP

PUTLB	PROC	NEAR
		MOV	DX, OFFSET CRLF
		MOV	AH, 09H
		INT	21H

		RET
PUTLB	ENDP

MAIN:
		MOV	AX, DSEG
		MOV	DS, AX

	SHOW_MENU:
		CALL	PUTLB
		CALL	MENUP
		CALL	PUTLB

	SHOW_MARKER:
		MOV	DX, OFFSET MARKER
		MOV	AH, 09H
		INT	21H

	READ_KEY:
		MOV	AH, 08H
		INT	21H

		CMP	AL, '0'
		JB	READ_KEY
		CMP	AL, '8'
		JA	READ_KEY

		MOV	DL, AL
		MOV	AH, 02H
		INT	21H

		MOV	BL, AL
		SUB	BL, '0'
		CALL	PUTLB

		CMP	BL, 8
		JE	EXIT

		CMP	BL, 0
		JE	SHOW_MENU

		MOV	BH, 0
		SUB	BL, 1
		SHL	BL, 1

		CALL	F[BX]
		CALL	PUTLB

		JMP	SHOW_MARKER

	EXIT:
		MOV	AX, 4C00H
		INT	21H

CSEG	ENDS

END MAIN
