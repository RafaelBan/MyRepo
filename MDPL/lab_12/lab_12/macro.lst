Microsoft (R) Macro Assembler Version 14.16.27027.1	    06/03/19 11:45:54
.\macro.asm						     Page 1 - 1


				.386
				.model flat,c

				public  adder

 00000000			.data

				swapb		macro	 x1, x2
					xchg 	al, x1
				  xchg 	al, x2
				  xchg	al, x1
				endm

				swapw 	macro 	x1, x2
				  xchg 	ax, x1
				  xchg 	ax, x2
				  xchg 	ax, x1
				endm

				swapd 	macro 	x1, x2
				  xchg 	eax, x1
				  xchg 	eax, x2
				  xchg 	eax, x1
				endm

				pushr macro rg:vararg

					for reg, <rg>
						ifidn <reg>, <f>
							pushf
						else
							push reg
				    endif
				  endm

				endm   

				popr macro rg:vararg

				  local n
				  n = 0

				  for cur, <rg>
				    n = n + 1
				    @catstr(var,%n) textequ <cur>
				  endm

				  rept n
				    value equ @catstr(var,%n)

				    ifidn value,<f>
							popf
				    else
				      pop 	@catstr(var,%n)
				    endif

				    n = n - 1
				  endm

				endm

				callfunc_cdecl macro t:req, name:req, par, reg:vararg
				  local n
				  n = 8

				@catstr(name):
				  push 	ebp
				  mov		ebp, esp
				  pushr reg

				  for p, <par>
				    temp equ @catstr(<p>,< equ >, <[ebp + %n]>)
				    temp
				    n = n + 4
				  endm
				  
					jmp		@catstr(name, _enter)
					@catstr(name, _exit):

				  popr	reg
				  pop 	ebp

					ret
				endm

 00000000			.code

				callfunc_cdecl int, adder, <x, y>, esi, edi, f
 00000000		     1	@catstr(adder):
 00000000  55		     1	  push 	ebp
 00000001  8B EC	     1	  mov		ebp, esp
 00000003  56		     3				push esi
 00000004  57		     3				push edi
 00000005  66| 9C	     3				pushf
 00000007  EB 06	     1		jmp		@catstr(adder, _enter)
 00000009		     1		@catstr(adder, _exit):
 00000009  66| 9D	     3				popf
 0000000B  5F		     3	      pop 	@catstr(var,%??0001)
 0000000C  5E		     3	      pop 	@catstr(var,%??0001)
 0000000D  5D		     1	  pop 	ebp
 0000000E  C3		     1		ret

 0000000F			adder_enter:
 0000000F  8B 75 08		  mov   esi, x
 00000012  8B 7D 0C		  mov   edi, y

 00000015  03 F7		  add   esi, edi
 00000017  8B C6		  mov   eax, esi

 00000019  EB EE			jmp adder_exit
				end

Microsoft (R) Macro Assembler Version 14.16.27027.1	    06/03/19 11:45:54
.\macro.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

callfunc_cdecl . . . . . . . . .	Proc
popr . . . . . . . . . . . . . .	Proc
pushr  . . . . . . . . . . . . .	Proc
swapb  . . . . . . . . . . . . .	Proc
swapd  . . . . . . . . . . . . .	Proc
swapw  . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000000 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000001B DWord	  Public  'CODE'	


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Number	 00000010h   
??0001 . . . . . . . . . . . . .	Number	 00000000h   
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000001h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
adder_enter  . . . . . . . . . .	L Near	 0000000F _TEXT	
adder_exit . . . . . . . . . . .	L Near	 00000009 _TEXT	
adder  . . . . . . . . . . . . .	L Near	 00000000 _TEXT	Public C
temp . . . . . . . . . . . . . .	Text   	 @catstr(<y>,< equ >, <[ebp + %??0000]>)
value  . . . . . . . . . . . . .	Text   	 @catstr(var,%??0001)
var1 . . . . . . . . . . . . . .	Text   	 esi
var2 . . . . . . . . . . . . . .	Text   	 edi
var3 . . . . . . . . . . . . . .	Text   	 f
x  . . . . . . . . . . . . . . .	Text   	 [ebp + 8]
y  . . . . . . . . . . . . . . .	Text   	 [ebp + 12]

	   0 Warnings
	   0 Errors
